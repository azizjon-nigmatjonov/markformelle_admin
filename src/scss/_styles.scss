input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  appearance: none;
  margin: 0;
}

input {
  caret-color: var(--main);

  &:focus {
    outline: none;
  }
}

.hide-scrollbar::-webkit-scrollbar {
  width: 0px;
  height: 0px;
}

.hide-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.MuiMenu-paper {
  ul {
    @include remove-scroll;
  }
}

#cselect,
#HFMultipleSelect {
  width: 100%;

  .MuiInputBase-root {
    width: 100%;
    height: 40px;
    outline: none;
    width: 100%;
    border-radius: 8px;

    svg {
      display: none;
    }

    // @include common-shadow;
    border: 1px solid var(--gray20);

    &.Mui-focused {
      .MuiOutlinedInput-notchedOutline {
        border-color: var(--main);
      }
    }

    fieldset {
      border: none;
      border-radius: 8px;
      background-color: transparent;
    }

    input {
      width: 100%;
      border-radius: 8px;
    }
  }
}

.MuiPaper-root {
  border-radius: 12px !important;

  ul {
    background-color: white;
    max-height: 300px;
    overflow: scroll;

    .Mui-selected {
      color: var(--main);
      font-weight: 500;
    }
  }
}

#hfInputMask {
  input {
    background-color: transparent;
    height: 40px;
    width: 100%;
    border: 1px solid var(--gray20);
    border-radius: 8px;
    padding: 0 14px;
    font-size: 14px;
    @include common-shadow;

    &:focus {
      outline: 1.5px solid var(--main);
    }
  }
}

#SwitchBtn {
  &.checked {
    .MuiSwitch-track {
      background-color: #ff5b01;
      opacity: 1;
    }
  }

  .MuiSwitch-root {
    .MuiSwitch-thumb {
      background-color: white;
      border: 1px solid var(--gray20);
      box-shadow: none;
    }
  }
}

.MuiModal-root {
  z-index: 99 !important;
}

#basicDatePicker {
  .MuiInputBase-root {
    background-color: white;
    border-radius: 8px;
    .MuiOutlinedInput-notchedOutline {
      border-color: var(--gray20);
      @include common-shadow;
      height: 44px;
    }
    .MuiInputBase-input {
      fieldset {
        border-radius: 8px;
      }
    }
  }
}

#multiDatePicker {
  width: 100%;

  .rmdp-container {
    width: 100%;
  }

  .MuiInputBase-root {
    .MuiOutlinedInput-notchedOutline,
    .MuiOutlinedInput-root {
      border-color: var(--lineGray);
      border-radius: 8px;
      height: 40px;
      @include common-shadow;
      .MuiOutlinedInput-notchedOutline {
        // border-color: var(--gray20);
        border-radius: 8px;
      }
    }

    .MuiFormControl-root {
      width: 100%;
    }

    .MuiTextField-root.error {
      .MuiInputBase-root {
        .MuiOutlinedInput-notchedOutline {
          border-color: var(--error);
        }
      }
    }

    .Mui-focused {
      .MuiOutlinedInput-notchedOutline {
        border-color: var(--primary);
        border-width: 1px;
      }
    }

    .MuiInputAdornment-root {
      z-index: 9;
      background-color: white;
      height: 100%;
      width: 40px;
      display: flex;
      justify-content: flex-end;
    }

    .sd:hover {
      background-color: white;
      color: var(--black) !important;
    }

    .Mui-focused {
      .MuiOutlinedInput-notchedOutline {
        border: 2px solid var(--main) !important;
      }
    }
  }

  .MuiButtonBase-root {
    &.Mui-checked {
      color: var(--main) !important;
    }
  }
}

#multiDatePicker {
  .rmdp-day {
    &:hover {
      background-color: red !important;
    }
  }

  .rmdp-day span {
    &:hover {
      background-color: red;
    }
  }

  .rmdp-input {
    background-color: transparent;
    height: 42px;
    border-radius: 10px;
  }
}

.custom-btn,
.success-btn,
.cancel-btn,
.new-btn {
  background-color: var(--primary);
  color: white;
  text-transform: none;
  border-radius: 8px;
  border: 1px solid var(--gray30);
  height: 40px;
  padding: 0 20px;
  width: 100%;
  white-space: nowrap;
  text-align: center;
  font-weight: 500;
  @include center-center;
  @include common-shadow;
  position: relative;

  &.form {
    height: 52px;
  }

  .MuiCircularProgress-root {
    margin-right: 16px;

    svg {
      color: white;
    }
  }

  &.disabled {
    background-color: var(--gray20);
    color: var(--black);
  }
}

.Mui-disabled {
  background-color: var(--gray20);
  color: var(--black);
  cursor: not-allowed !important;
}

.unpermit {
  cursor: not-allowed;
  position: relative;
  background-color: var(--gray20);

  &:hover {
    &::after {
      content: "Permission o'rnatilmagan!";
      white-space: nowrap;
      position: absolute;
      left: -70px;
      top: -24px;
      color: var(--main);
    }
  }
}

.custom-btn.success {
  background-color: var(--green);
}

.success-btn {
  background-color: var(--green);
}

.cancel-btn {
  background-color: var(--gray20);
  color: var(--black);
  text-transform: none;
  height: 39px;
}

.new-btn {
  background-color: var(--blue10);
  color: var(--blue90);
}

.default-btn {
  height: 40px;
  padding: 0 20px;
  border: 1px solid var(--gray20);
  border-radius: 8px;
  @include common-shadow;
  @include center-center;
}

.accordion {
  color: #444;
  cursor: pointer;
  // padding: 18px;
  height: 40px !important;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  transition: background-color 0.6s ease;
}

.common-shadow {
  box-shadow: 0px 1px 3px 0px rgba(16, 24, 40, 0.1),
    0px 1px 2px 0px rgba(16, 24, 40, 0.06);
}

.card-shadow {
  box-shadow: 0px 1px 3px 0px rgba(16, 24, 40, 0.1),
    0px 1px 2px 0px rgba(16, 24, 40, 0.06);
}

.container {
  max-width: 100vw !important;
  @apply px-5 py-5;
}

.common-btn {
  @include common-btn;
}

#mouse-over-popover-custom {
  left: 70px;
  top: -25px;
  box-shadow: none !important;
  z-index: 999;
  .wrapper {
    background-color: red;
    box-shadow: none;
    z-index: 999;
  }
}

.machine-grid {
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  gap: 15px;
}

$maxWidthContainer: 1440;
$maxWidth: 1920;

// Corrected Mixin
@mixin adaptiveValue(
  $property,
  $startSize,
  $minSize,
  $type,
  $maxWidthContainer,
  $maxWidth
) {
  $addSize: $startSize - $minSize;

  @if $type == 1 {
    // For smaller widths than container width
    #{$property}: #{$startSize}px;
    @media (max-width: #{$maxWidthContainer}px) {
      #{$property}: calc(
        #{$minSize}px + #{$addSize} * ((100vw - 375px) / #{$maxWidthContainer -
              375})
      );
    }
  } @else if $type == 2 {
    // For larger widths than container width
    #{$property}: #{$startSize}px;
    @media (min-width: #{$maxWidthContainer}px) {
      #{$property}: calc(
        #{$minSize}px + #{$addSize} * ((100vw - 375px) / #{$maxWidth - 375})
      );
    }
  } @else {
    // General case
    #{$property}: calc(
      #{$minSize}px + #{$addSize} * ((100vw - 375px) / #{$maxWidth - 375})
    );
  }
}

@mixin resAdaptCards($cardWidth, $rowGap, $columnGap) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($cardWidth, 1fr));
  gap: $rowGap $columnGap;
}

.grid-machines-dashboard {
  .title {
    font-weight: bold;
    @include adaptiveValue(font-size, 14, 14, 1, $maxWidthContainer, $maxWidth);

    @media (max-width: 980px) {
      font-size: 8px;
    }
    @media (max-width: 940px) {
      font-size: 16px;
    }
  }

  .circular {
    --CircularProgress-size: 5.8rem;
    --CircularProgress-trackThickness: 0.6rem;
    --CircularProgress-progressThickness: 0.6rem;

    @include adaptiveValue(font-size, 12, 10, 1, $maxWidthContainer, $maxWidth);

    @media (max-width: 1100px) {
      --CircularProgress-size: 4.5rem;
      --CircularProgress-trackThickness: 0.4rem;
      --CircularProgress-progressThickness: 0.4rem;
    }

    @media (max-width: 980px) {
      --CircularProgress-size: 3.5rem;
      --CircularProgress-trackThickness: 0.3rem;
      --CircularProgress-progressThickness: 0.3rem;
    }

    @media (max-width: 940px) {
      --CircularProgress-size: 7rem;
      --CircularProgress-trackThickness: 0.6rem;
      --CircularProgress-progressThickness: 0.6rem;
    }
  }

  .circular {
    p {
      @media (max-width: 980px) {
        font-size: 8px;
      }
    }
  }

  .circular .stack {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0;
  }

  // Text elements
  .circular .stack p {
    margin: 0;
    @include adaptiveValue(font-size, 14, 8, 1, $maxWidthContainer, $maxWidth);
  }

  .circular .stack .divider {
    height: 2px;
    background-color: gray;
    opacity: 0.5;
    background: black;
  }

  .circular .stack .weight {
    @include adaptiveValue(
      font-size,
      0.7rem,
      0.5rem,
      1,
      $maxWidthContainer,
      $maxWidth
    );
  }

  .circular {
    .MuiStack-root {
      p {
        @media (max-width: 980px) {
          font-size: 8px !important;
        }
        @media (max-width: 940px) {
          font-size: 12px !important;
        }
      }
    }
  }

  .circular .stack .typography {
    display: flex;
    align-items: center;
    @include adaptiveValue(font-size, 12, 6, 1, $maxWidthContainer, $maxWidth);

    @media (max-width: 980px) {
      font-size: 1px !important;
    }
    @media (max-width: 940px) {
      font-size: 12px !important;
    }
  }

  .circular .stack .typography .icon {
    @include adaptiveValue(font-size, 18, 14, 1, $maxWidthContainer, $maxWidth);
    margin-right: 4px;

    @media (max-width: 980px) {
      font-size: 20px;
    }
    @media (max-width: 940px) {
      font-size: 18px;
    }
  }
  .icon-connection {
    font-size: 25px !important;
    @media (max-width: 980px) {
      font-size: 12px !important;
    }
    @media (max-width: 940px) {
      font-size: 25px !important;
    }
  }
  .MuiCard-root {
    .MuiTypography-root {
      font-size: 12px;
      @media (max-width: 980px) {
        font-size: 8px;
      }
      @media (max-width: 940px) {
        font-size: 12px;
      }
    }
  }
  .circular {
 
    .MuiSvgIcon-root {
      width: 10px;
    }
  }
}
