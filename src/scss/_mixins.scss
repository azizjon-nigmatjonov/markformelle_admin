$baseRadius: 10px;
$paddingBlock: 24px;
$lg: 18px;
$xl2: 24px;

@mixin center-between() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
@mixin between() {
  display: flex;
  justify-content: space-between;
}
@mixin center() {
  display: flex;
  align-items: center;
}
@mixin center-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}
@mixin center-end() {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
@mixin end-center() {
  display: flex;
  align-items: flex-end;
  justify-content: center;
}
@mixin end-end() {
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
}
@mixin end-between() {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
}
@mixin column() {
  display: flex;
  flex-direction: column;
}
@mixin column-reverse() {
  display: flex;
  flex-direction: column-reverse;
}

@mixin remove-scroll() {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}
@mixin design-scroll() {
  &::-webkit-scrollbar {
    display: block;
    width: 8px;
  }
  &::-webkit-scrollbar-track {
    border-radius: 4px;
    border: 1px solid transparent;
  }
  &::-webkit-scrollbar-thumb {
    background: var(--gray30);
    border-radius: 4px;
  }
}
.remove-scroll {
  @include remove-scroll;
}
.designed-scroll {
  @include design-scroll;
  scroll-behavior: smooth;
}
@mixin smooth-scroll() {
  scroll-behavior: smooth;
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none;
  // &::-webkit-scrollbar {
  //   display: none;
  // }
}

@mixin common-btn() {
  height: 40px;
  border-radius: 8px;
  border: 1px solid var(--gray30);
  box-shadow:
    0px 1px 3px 0px rgba(16, 24, 40, 0.1),
    0px 1px 2px 0px rgba(16, 24, 40, 0.06);

  &:focus {
    border-color: var(--main);
  }
}

@mixin common-shadow() {
  box-shadow:
    0px 1px 3px 0px rgba(16, 24, 40, 0.1),
    0px 1px 2px 0px rgba(16, 24, 40, 0.06);
}

body {
  @include remove-scroll;
}

$maxWidthContainer: 1400;

@mixin adapviteValue($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    //faqat containerdan kichik width
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 1000px) / #{$maxWidthContainer - 1000}));
    }
  } @else if $type==2 {
    // faqat containerdan katta width
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 375px) / #{$maxWidth - 375}));
    }
  } @else {
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 375px) / #{$maxWidth - 375}));
  }
}
